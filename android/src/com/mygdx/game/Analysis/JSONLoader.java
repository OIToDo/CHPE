package com.mygdx.game.Analysis;

import com.mygdx.game.DebugLog;

import org.json.simple.JSONArray;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;

/**
 * This class implements the Data interface, it retrieves the vector data
 * from a JSON file generated by a neural network based Python application.
 */
public class JSONLoader {
    /**
     * A JSON specific array that holds every frame's data
     */
    private JSONArray frames;
    /**
     * Location of the JSON file on disk.
     */
    private String filepath = "";

    /**
     * Constructor that inits member fields thus loading the data from disk.
     * @param fp File path to the JSON file on disk.
     */
    public JSONLoader(String fp) {
        filepath = fp;
        JSONParser jsonParser = new JSONParser();

        try (FileReader reader = new FileReader(filepath))
        {
            //Read JSON file
            Object obj = jsonParser.parse(reader);
            frames = (JSONArray) obj;
        } catch (FileNotFoundException e) {
            DebugLog.log("Unable to find " + fp);
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }

    public JSONLoader(Reader r) {
        JSONParser jsonParser = new JSONParser();

        try {
            //Read JSON file
            Object obj = jsonParser.parse(r);
            frames = (JSONArray) obj;
        } catch (FileNotFoundException e) {
            DebugLog.log("Unable to process Reader");
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }

    }

    public String toString() {
        return frames.toString();
    }
    public int getFrameCount() { return frames.size(); }
    public JSONArray getArray() { return frames; }

}